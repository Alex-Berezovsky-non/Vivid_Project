from django.contrib import admin
from django.utils.translation import gettext_lazy as _
from django.utils.safestring import mark_safe
from django.urls import reverse
from .models import TimeSlot, Booking
from .filters import DateTypeFilter  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Ñ–∏–ª—å—Ç—Ä

@admin.register(TimeSlot)
class TimeSlotAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ —Å —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ
    verbose_name = _("–í—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç")
    verbose_name_plural = _("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ
    list_display = [
        'format_date_display', 
        'format_time_display', 
        'availability_status',
        'bookings_count',
        'max_bookings'
    ]
    
    list_editable = ['max_bookings']
    list_filter = [
        DateTypeFilter,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
        'is_available', 
        'specific_date'
    ]
    
    search_fields = ['specific_date']
    ordering = ['specific_date', 'start_time']
    
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    fieldsets = (
        (_('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'), {
            'fields': (
                'date_type', 
                'specific_date',
                'start_time', 
                'end_time'
            )
        }),
        (_('–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –ª–∏–º–∏—Ç—ã'), {
            'fields': (
                'is_available',
                'max_bookings'
            ),
            'classes': ('wide',),
        }),
        (_('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'), {
            'fields': ('bookings_count_display',),
            'classes': ('collapse',),
        }),
    )
    
    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    def format_date_display(self, obj):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if obj.date_type == 'specific' and obj.specific_date:
            return obj.specific_date.strftime('%d.%m.%Y')
        elif obj.date_type == 'weekday':
            return "–ë—É–¥–Ω–∏–µ –¥–Ω–∏"
        else:
            return "–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏"
    format_date_display.short_description = _('–î–∞—Ç–∞')
    format_date_display.admin_order_field = 'specific_date'
    
    def format_time_display(self, obj):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return f"{obj.start_time.strftime('%H:%M')} - {obj.end_time.strftime('%H:%M')}"
    format_time_display.short_description = _('–í—Ä–µ–º—è')
    
    def availability_status(self, obj):
        """–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å —Ü–≤–µ—Ç–æ–º"""
        if obj.is_available:
            if obj.get_available_slots() > 0:
                return mark_safe('<span style="color: green;">‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω</span>')
            else:
                return mark_safe('<span style="color: orange;">‚ö†Ô∏è –ó–∞–Ω—è—Ç</span>')
        else:
            return mark_safe('<span style="color: red;">‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span>')
    availability_status.short_description = _('–°—Ç–∞—Ç—É—Å')
    
    def bookings_count(self, obj):
        """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–µ–π –∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç"""
        booked = obj.bookings.filter(is_confirmed=True).count()
        free = obj.get_available_slots()
        return f"{booked}/{obj.max_bookings} (—Å–≤–æ–±–æ–¥–Ω–æ: {free})"
    bookings_count.short_description = _('–ë—Ä–æ–Ω–∏')
    
    def bookings_count_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±—Ä–æ–Ω–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è)"""
        booked = obj.bookings.filter(is_confirmed=True).count()
        free = obj.get_available_slots()
        return f"–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ: {booked} –∏–∑ {obj.max_bookings}, –°–≤–æ–±–æ–¥–Ω–æ: {free}"
    bookings_count_display.short_description = _('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–æ–Ω–µ–π')
    
    # –ü–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
    readonly_fields = ['bookings_count_display']
    
    # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    actions = ['make_available', 'make_unavailable']
    
    def make_available(self, request, queryset):
        """–î–µ–π—Å—Ç–≤–∏–µ: —Å–¥–µ–ª–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏"""
        updated = queryset.update(is_available=True)
        self.message_user(request, f"{updated} —Å–ª–æ—Ç–æ–≤ —Å—Ç–∞–ª–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏")
    make_available.short_description = _('–°–¥–µ–ª–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏')
    
    def make_unavailable(self, request, queryset):
        """–î–µ–π—Å—Ç–≤–∏–µ: —Å–¥–µ–ª–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏"""
        updated = queryset.update(is_available=False)
        self.message_user(request, f"{updated} —Å–ª–æ—Ç–æ–≤ —Å—Ç–∞–ª–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏")
    make_unavailable.short_description = _('–°–¥–µ–ª–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏')

@admin.register(Booking)
class BookingAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ
    verbose_name = _("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
    verbose_name_plural = _("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ
    list_display = [
        'client_name',
        'contact_info',
        'shooting_type_display',
        'time_slot_link',
        'status_badge',
        'is_confirmed',  # –†–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        'created_date'
    ]
    
    list_editable = ['is_confirmed']  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
    list_filter = [
        'is_confirmed',
        'shooting_type',
        ('created_at', admin.DateFieldListFilter),
        'time_slot__specific_date'
    ]
    
    search_fields = [
        'client_name', 
        'client_email', 
        'client_phone', 
        'confirmation_code'
    ]
    
    readonly_fields = [
        'created_at', 
        'confirmation_code',
        'booking_details',
        'status_badge_display'
    ]
    
    ordering = ['-created_at']
    
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    fieldsets = (
        (_('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'), {
            'fields': (
                'client_name', 
                'client_email', 
                'client_phone'
            ),
            'classes': ('wide',),
        }),
        (_('–î–µ—Ç–∞–ª–∏ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏'), {
            'fields': (
                'time_slot',
                'shooting_type',
                'message'
            )
        }),
        (_('–°—Ç–∞—Ç—É—Å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'), {
            'fields': (
                'is_confirmed',  # –†–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                'status_badge_display',  # –¢–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                'confirmation_code',
                'booking_details'
            ),
            'classes': ('collapse',),
        }),
        (_('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'), {
            'fields': ('created_at',),
            'classes': ('collapse',),
        }),
    )
    
    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    def contact_info(self, obj):
        """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º –≤–∏–¥–µ"""
        return f"{obj.client_phone} | {obj.client_email}"
    contact_info.short_description = _('–ö–æ–Ω—Ç–∞–∫—Ç—ã')
    
    def shooting_type_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å—ä–µ–º–∫–∏ —Å –∏–∫–æ–Ω–∫–æ–π"""
        icons = {
            'portrait': 'üì∑',
            'lovestory': 'üíï',
            'family': 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
            'other': '‚ùì'
        }
        return f"{icons.get(obj.shooting_type, '')} {obj.get_shooting_type_display()}"
    shooting_type_display.short_description = _('–¢–∏–ø —Å—ä–µ–º–∫–∏')
    
    def time_slot_link(self, obj):
        """–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç"""
        url = reverse('admin:bookings_timeslot_change', args=[obj.time_slot.id])
        return mark_safe(f'<a href="{url}">{obj.time_slot}</a>')
    time_slot_link.short_description = _('–í—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç')
    
    def status_badge(self, obj):
        """–°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º"""
        if obj.is_confirmed:
            return mark_safe('<span style="color: green; font-weight: bold;">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</span>')
        else:
            return mark_safe('<span style="color: orange; font-weight: bold;">‚è≥ –û–∂–∏–¥–∞–µ—Ç</span>')
    status_badge.short_description = _('–°—Ç–∞—Ç—É—Å')
    status_badge.allow_tags = True
    
    def status_badge_display(self, obj):
        """–°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏ –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)"""
        return self.status_badge(obj)
    status_badge_display.short_description = _('–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å')
    status_badge_display.allow_tags = True
    
    def created_date(self, obj):
        """–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        return obj.created_at.strftime('%d.%m.%Y %H:%M')
    created_date.short_description = _('–°–æ–∑–¥–∞–Ω–æ')
    created_date.admin_order_field = 'created_at'
    
    def booking_details(self, obj):
        """–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è)"""
        details = [
            f"<strong>–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</strong> {obj.confirmation_code}",
            f"<strong>–°–æ–∑–¥–∞–Ω–æ:</strong> {obj.created_at.strftime('%d.%m.%Y %H:%M')}",
            f"<strong>–í—Ä–µ–º—è —Å—ä–µ–º–∫–∏:</strong> {obj.time_slot}",
            f"<strong>–°—Ç–∞—Ç—É—Å:</strong> {'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' if obj.is_confirmed else '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'}"
        ]
        return mark_safe('<br>'.join(details))
    booking_details.short_description = _('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏')
    
    # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    actions = ['confirm_bookings', 'unconfirm_bookings', 'export_contacts']
    
    def confirm_bookings(self, request, queryset):
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏"""
        updated = queryset.update(is_confirmed=True)
        self.message_user(request, f"{updated} –±—Ä–æ–Ω–µ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
    confirm_bookings.short_description = _('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏')
    
    def unconfirm_bookings(self, request, queryset):
        """–°–Ω—è—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–µ–π"""
        updated = queryset.update(is_confirmed=False)
        self.message_user(request, f"{updated} –±—Ä–æ–Ω–µ–π –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
    unconfirm_bookings.short_description = _('–°–Ω—è—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å –±—Ä–æ–Ω–µ–π')
    
    def export_contacts(self, request, queryset):
        """–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)"""
        self.message_user(request, "–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –±—É–¥—É—â–µ–º")
    export_contacts.short_description = _('–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–µ–π')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
    def get_form(self, request, obj=None, **kwargs):
        form = super().get_form(request, obj, **kwargs)
        # –î–µ–ª–∞–µ–º –ø–æ–ª–µ –≤—Ä–µ–º–µ–Ω–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        if obj:
            form.base_fields['time_slot'].disabled = True
        return form

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = _("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–º")
admin.site.site_title = _("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
admin.site.index_title = _("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—è–º–∏ –Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏")